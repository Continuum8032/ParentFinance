// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let nestor = 0;
let vadimus = 0;
let history = [];
let isLoading = true;
let db = null;
// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ —Ñ–ª–∞–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –¥–µ—Ç–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Ñ–ª–∞–≥–∏
const USER_FLAG = 'Ksusha'; // –î–ª—è –¥—Ä—É–≥–∏—Ö –¥–µ—Ç–µ–π: 'Nestor', 'Vadimus' –∏ —Ç.–¥.

// ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∫–ª—é—á–∞–µ—Ç —Ñ–ª–∞–≥ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
let userId = `family_child_${USER_FLAG.toLowerCase()}`;

// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø HTML onclick - –û–ë–™–Ø–í–õ–Ø–ï–ú –°–†–ê–ó–£!

function showEarnModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –õ–∏—Å–∏—á–∫–∞ –°–∞—Ö–∞—Ä–æ—á–µ–∫');
  const modal = document.getElementById('earnModal');
  if (modal) {
    modal.style.display = 'block';
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ earnModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

function showSpendModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –õ–∏—Å–∏—á–∫–∞ –¢—Ä–æ–ª–ª');
  const modal = document.getElementById('spendModal');
  if (modal) {
    modal.style.display = 'block';
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ spendModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

function showShopModal() {
  console.log('ü¶ä –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–∞–≥–∞–∑–∏–Ω–∞');
  const modal = document.getElementById('shopModal');
  if (modal) {
    modal.style.display = 'block';
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ shopModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
}

function closeModal(modalId) {
  console.log(`ü¶ä –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ: ${modalId}`);
  
  if (!modalId) {
    console.error('‚ùå modalId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ closeModal');
    return;
  }
  
  const modal = document.getElementById(modalId);
  if (modal) {
    modal.style.display = 'none';

    const selectors = {
      earnModal: 'earnAction',
      spendModal: 'spendAction',
      shopModal: 'shopAction',
    };

    if (selectors[modalId]) {
      const selectElement = document.getElementById(selectors[modalId]);
      if (selectElement) {
        selectElement.value = '';
      }
    }
  } else {
    console.error(`‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${modalId} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
  }
}

function confirmEarn() {
  const select = document.getElementById('earnAction');
  if (!select) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç earnAction –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text || value <= 0) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!');
    return;
  }

  console.log(`‚úÖ –ó–∞—Ä–∞–±–æ—Ç–∞–ª: ${text} (+${value} –≤–∞–¥–∏–º—É—Å–æ–≤)`);

  vadimus += value;
  convertVadimus();
  addToHistory(`‚úÖ ${text}`, 'earn');
  updateDisplay();
  closeModal('earnModal');
}

function confirmSpend() {
  const select = document.getElementById('spendAction');
  if (!select) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç spendAction –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text || value <= 0) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Å—Ç—É–ø–æ–∫!');
    return;
  }

  console.log(`‚ùå –®—Ç—Ä–∞—Ñ: ${text} (-${value} –≤–∞–¥–∏–º—É—Å–æ–≤/–Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤)`);

  if (value >= 100) {
    const nestorToRemove = Math.floor(value / 10);
    if (nestor >= nestorToRemove) {
      nestor -= nestorToRemove;
    } else {
      const totalVadimus = nestor * 10 + vadimus;
      if (totalVadimus >= value) {
        const remainingVadimus = totalVadimus - value;
        nestor = Math.floor(remainingVadimus / 10);
        vadimus = remainingVadimus % 10;
      } else {
        nestor = 0;
        vadimus = 0;
      }
    }
  } else {
    if (vadimus >= value) {
      vadimus -= value;
    } else {
      const totalVadimus = nestor * 10 + vadimus;
      if (totalVadimus >= value) {
        const remainingVadimus = totalVadimus - value;
        nestor = Math.floor(remainingVadimus / 10);
        vadimus = remainingVadimus % 10;
      } else {
        nestor = 0;
        vadimus = 0;
      }
    }
  }

  addToHistory(`‚ùå ${text}`, 'spend');
  updateDisplay();
  closeModal('spendModal');
}

function confirmShop() {
  const select = document.getElementById('shopAction');
  if (!select) {
    console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç shopAction –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  const value = parseInt(select.value);
  const text = select.options[select.selectedIndex].text;

  if (!value || !text || value <= 0) {
    alert('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É!');
    return;
  }

  const nestorNeeded = Math.floor(value / 10);
  const totalNestor = nestor + Math.floor(vadimus / 10);

  if (totalNestor < nestorNeeded) {
    alert(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤! –ù—É–∂–Ω–æ: ${nestorNeeded}, –µ—Å—Ç—å: ${totalNestor}`);
    return;
  }

  console.log(`üõí –ü–æ–∫—É–ø–∫–∞: ${text} (-${nestorNeeded} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤)`);

  const totalVadimus = nestor * 10 + vadimus;
  const remainingVadimus = totalVadimus - value;

  nestor = Math.floor(remainingVadimus / 10);
  vadimus = remainingVadimus % 10;

  addToHistory(`üõí –ö—É–ø–∏–ª: ${text}`, 'shop');
  updateDisplay();
  closeModal('shopModal');
}

// ALIAS –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function addEarning() {
  console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è addEarning, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ confirmEarn');
  confirmEarn();
}

function addSpending() {
  console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è addSpending, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ confirmSpend');
  confirmSpend();
}

function addShopping() {
  console.warn('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è —Ñ—É–Ω–∫—Ü–∏—è addShopping, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ confirmShop');
  confirmShop();
}

console.log('ü¶ä –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
function updateSyncStatus(status, message) {
  const statusEl = document.getElementById('sync-status');
  if (!statusEl) return;
  
  statusEl.className = `sync-status ${status}`;
  statusEl.textContent = message;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
const firebaseConfig = {
  apiKey: 'AIzaSyB8i6XUdNv8XdMEtip7mMBZe_f1-6MuawE',
  authDomain: 'mamcoins-tracker.firebaseapp.com',
  projectId: 'mamcoins-tracker',
  storageBucket: 'mamcoins-tracker.firebasestorage.app',
  messagingSenderId: '655371831130',
  appId: '1:655371831130:web:1bd473c42b14cb4bd15563',
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase v8
function initializeFirebase() {
  updateSyncStatus('syncing', 'üîÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –æ–±–ª–∞–∫—É...');
  
  try {
    console.log('üî• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase v8...');
    firebase.initializeApp(firebaseConfig);
    db = firebase.firestore();
    console.log('‚úÖ Firebase v8 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    startDataListenerWithTimeout();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
    console.log('üì± –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å localStorage');
    updateSyncStatus('offline', 'üì± –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ');
    isLoading = false;
  }
}

// –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö Firebase —Å —Ç–∞–π–º–∞—É—Ç–æ–º –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Ñ–ª–∞–≥—É
function startDataListenerWithTimeout() {
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º query –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ userFlag
    const usersQuery = db.collection('users').where('userFlag', '==', USER_FLAG);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firebase
    let syncTimeout = setTimeout(() => {
      console.log('‚è∞ Firebase –º–µ–¥–ª–µ–Ω–Ω—ã–π, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å localStorage');
      updateSyncStatus('offline', 'üì± –ú–µ–¥–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç');
      isLoading = false;
      updateDisplay();
      loadHistory();
    }, 3000); // 3 —Å–µ–∫—É–Ω–¥—ã —Ç–∞–π–º–∞—É—Ç
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Ñ–ª–∞–≥—É
    usersQuery.onSnapshot((querySnapshot) => {
      // –û—Ç–º–µ–Ω—è–µ–º —Ç–∞–π–º–∞—É—Ç - Firebase –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
      clearTimeout(syncTimeout);
      
      console.log(`üîç –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å —Ñ–ª–∞–≥–æ–º ${USER_FLAG}: ${querySnapshot.size}`);
      
      if (!querySnapshot.empty) {
        // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π (–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π) –¥–æ–∫—É–º–µ–Ω—Ç —Å –Ω–∞—à–∏–º —Ñ–ª–∞–≥–æ–º
        const docSnapshot = querySnapshot.docs[0];
        const data = docSnapshot.data();
        
        console.log(`üì• –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${USER_FLAG}:`, {
          userFlag: data.userFlag,
          nestor: data.nestor,
          vadimus: data.vadimus,
          historyCount: (data.history || []).length
        });
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–ª–∞–≥–∞ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        if (data.userFlag !== USER_FLAG) {
          console.error(`‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–ª–∞–≥–∞! –û–∂–∏–¥–∞–ª—Å—è: ${USER_FLAG}, –ø–æ–ª—É—á–µ–Ω: ${data.userFlag}`);
          createNewUser();
          updateSyncStatus('synced', '‚òÅÔ∏è –ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω');
          isLoading = false;
          return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
        const newNestor = data.nestor || 0;
        const newVadimus = data.vadimus || 0;
        const newHistory = data.history || [];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
        if (newNestor !== nestor || newVadimus !== vadimus || 
            JSON.stringify(newHistory) !== JSON.stringify(history)) {
          
          nestor = newNestor;
          vadimus = newVadimus;
          history = newHistory;
          
          console.log(`üí∞ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Firebase (${USER_FLAG}): ${nestor} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤, ${vadimus} –≤–∞–¥–∏–º—É—Å–æ–≤`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º localStorage –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑
          saveToLocalStorage();
          updateDisplay();
          loadHistory();
        }
        
        updateSyncStatus('synced', '‚òÅÔ∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
        
      } else {
        console.log(`üë∂ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${USER_FLAG}, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ`);
        createNewUser();
        updateSyncStatus('synced', '‚òÅÔ∏è –ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω');
      }
      
      isLoading = false;
      
    }, (error) => {
      clearTimeout(syncTimeout);
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase:', error);
      console.log('üì± –†–∞–±–æ—Ç–∞–µ–º —Å localStorage');
      updateSyncStatus('offline', 'üì± –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
      isLoading = false;
      updateDisplay();
      loadHistory();
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª—É—à–∞—Ç–µ–ª—è Firebase:', error);
    updateSyncStatus('offline', 'üì± –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    isLoading = false;
    updateDisplay();
    loadHistory();
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firebase (–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–µ)
function createNewUser() {
  try {
    // –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID, –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å —Ñ–ª–∞–≥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userDocRef = db.collection('users').doc(userId);
    
    const userData = {
      userFlag: USER_FLAG,
      userId: userId,
      nestor: nestor,
      vadimus: vadimus,
      history: history,
      createdAt: firebase.firestore.FieldValue.serverTimestamp(),
      lastActive: firebase.firestore.FieldValue.serverTimestamp(),
    };
    
    console.log(`üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º–∏:`, userData);
    
    userDocRef.set(userData).then(() => {
      console.log(`‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ Firebase —Å —Ñ–ª–∞–≥–æ–º: ${USER_FLAG}`);
    }).catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Firebase (–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ–µ)
function saveToFirebase() {
  // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
  saveToLocalStorage();
  
  if (!db) {
    console.log('‚è≥ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ');
    updateSyncStatus('offline', 'üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ');
    return;
  }
  
  try {
    const userDocRef = db.collection('users').doc(userId);
    
    const updateData = {
      userFlag: USER_FLAG,
      userId: userId,
      nestor: nestor,
      vadimus: vadimus,
      history: history,
      lastActive: firebase.firestore.FieldValue.serverTimestamp(),
    };
    
    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è ${USER_FLAG}:`, {
      userFlag: USER_FLAG,
      nestor: nestor,
      vadimus: vadimus,
      historyCount: history.length
    });
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º set —Å merge, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
    userDocRef.set(updateData, { merge: true }).then(() => {
      console.log(`üíæ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Firebase (${USER_FLAG}): ${nestor} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤, ${vadimus} –≤–∞–¥–∏–º—É—Å–æ–≤`);
      updateSyncStatus('synced', '‚òÅÔ∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
    }).catch((error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Firebase:', error);
      console.log('üì± –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ');
      updateSyncStatus('offline', 'üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ');
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Firebase:', error);
    updateSyncStatus('offline', 'üì± –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
  }
}

// Fallback –º–µ—Ç–æ–¥—ã –¥–ª—è localStorage —Å —É—á–µ—Ç–æ–º —Ñ–ª–∞–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadFromLocalStorage() {
  const savedNestor = localStorage.getItem(`nestor_${USER_FLAG}`);
  const savedVadimus = localStorage.getItem(`vadimus_${USER_FLAG}`);
  const savedHistory = localStorage.getItem(`history_${USER_FLAG}`);

  if (savedNestor !== null) {
    nestor = parseInt(savedNestor) || 0;
  }

  if (savedVadimus !== null) {
    vadimus = parseInt(savedVadimus) || 0;
  }

  if (savedHistory) {
    try {
      history = JSON.parse(savedHistory) || [];
    } catch (e) {
      history = [];
    }
  }

  console.log(`üì± –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ localStorage (${USER_FLAG}): ${nestor} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤, ${vadimus} –≤–∞–¥–∏–º—É—Å–æ–≤`);
}

function saveToLocalStorage() {
  localStorage.setItem(`nestor_${USER_FLAG}`, nestor.toString());
  localStorage.setItem(`vadimus_${USER_FLAG}`, vadimus.toString());
  localStorage.setItem(`history_${USER_FLAG}`, JSON.stringify(history));
  
  console.log(`üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage (${USER_FLAG}): ${nestor} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤, ${vadimus} –≤–∞–¥–∏–º—É—Å–æ–≤`);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function updateDisplay() {
  const nestorEl = document.getElementById('nestor');
  const vadimusEl = document.getElementById('vadimus');
  
  if (nestorEl) nestorEl.textContent = nestor;
  if (vadimusEl) vadimusEl.textContent = vadimus;
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–¥–∏–º—É—Å–æ–≤ –≤ –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω—ã
function convertVadimus() {
  if (vadimus >= 10) {
    const newNestor = Math.floor(vadimus / 10);
    nestor += newNestor;
    vadimus = vadimus % 10;

    addToHistory(`üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: ${newNestor} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤ –∏–∑ –≤–∞–¥–∏–º—É—Å–æ–≤`, 'earn');
  }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é
function addToHistory(text, type = 'earn') {
  const now = new Date();
  const timeStr = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });

  const newHistoryItem = {
    text: text,
    time: timeStr,
    type: type,
    timestamp: now.getTime(),
  };

  history.unshift(newHistoryItem);

  if (history.length > 50) {
    history = history.slice(0, 50);
  }

  saveToFirebase();
  loadHistory();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
function loadHistory() {
  const historyList = document.getElementById('history-list');
  if (!historyList) return;

  historyList.innerHTML = '';
  
  // –£–±–∏—Ä–∞–µ–º –¥–æ–ª–≥–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ - —Ç–µ–ø–µ—Ä—å –≤—Å—ë –±—ã—Å—Ç—Ä–æ
  if (history.length === 0) {
    historyList.innerHTML = '<div class="history-item">ü¶ä –õ–∏—Å–∏—á–∫–∞ –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–ª–∞</div>';
    return;
  }

  history.forEach(item => {
    const div = document.createElement('div');
    div.className = `history-item ${item.type}`;
    div.innerHTML = `<strong>[${item.time}]</strong> ${item.text}`;
    historyList.appendChild(div);
  });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö
window.onclick = function (event) {
  const modals = ['earnModal', 'spendModal', 'shopModal'];

  modals.forEach(modalId => {
    const modal = document.getElementById(modalId);
    if (modal && event.target === modal) {
      closeModal(modalId);
    }
  });
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.nestorDebug = {
  showData: () => console.log({ 
    userFlag: USER_FLAG,
    userId: userId,
    nestor, 
    vadimus, 
    history: history.slice(0, 5),
    totalHistory: history.length,
    isLoading, 
    firebaseConnected: !!db,
    elements: {
      earnModal: !!document.getElementById('earnModal'),
      spendModal: !!document.getElementById('spendModal'),
      shopModal: !!document.getElementById('shopModal'),
      earnAction: !!document.getElementById('earnAction'),
      spendAction: !!document.getElementById('spendAction'),
      shopAction: !!document.getElementById('shopAction')
    }
  }),
  addNestor: (amount) => { 
    nestor += amount; 
    updateDisplay(); 
    saveToFirebase(); 
    console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤`);
  },
  addVadimus: (amount) => { 
    vadimus += amount; 
    updateDisplay(); 
    saveToFirebase(); 
    console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –≤–∞–¥–∏–º—É—Å–æ–≤`);
  },
  reset: () => { 
    if (confirm('–¢–æ—á–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?')) {
      nestor = 0; 
      vadimus = 0; 
      history = []; 
      updateDisplay(); 
      saveToFirebase();
      console.log('üîÑ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã');
    }
  },
  forceSync: () => {
    saveToFirebase();
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
  },
  testFirebase: () => {
    console.log('üî• –¢–µ—Å—Ç–∏—Ä—É–µ–º Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
    console.log('Firebase app:', typeof firebase !== 'undefined' ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    console.log('Firestore:', db ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω' : '‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    console.log('User Flag:', USER_FLAG);
    console.log('User ID:', userId);
    console.log('Loading state:', isLoading ? '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...' : '–ì–æ—Ç–æ–≤');
  },
  testElements: () => {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML —ç–ª–µ–º–µ–Ω—Ç—ã...');
    ['earnModal', 'spendModal', 'shopModal', 'earnAction', 'spendAction', 'shopAction'].forEach(id => {
      const el = document.getElementById(id);
      console.log(`${id}:`, el ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–ï –Ω–∞–π–¥–µ–Ω');
    });
  },
  showAllUsers: () => {
    console.log('üë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ localStorage:');
    const allKeys = Object.keys(localStorage);
    const userFlags = new Set();
    
    allKeys.forEach(key => {
      if (key.startsWith('nestor_') || key.startsWith('vadimus_') || key.startsWith('history_')) {
        const flag = key.split('_')[1];
        userFlags.add(flag);
      }
    });
    
    if (userFlags.size === 0) {
      console.log('–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      return;
    }
    
    userFlags.forEach(flag => {
      const nestor = localStorage.getItem(`nestor_${flag}`) || '0';
      const vadimus = localStorage.getItem(`vadimus_${flag}`) || '0';
      const history = localStorage.getItem(`history_${flag}`);
      let historyCount = 0;
      try {
        historyCount = history ? JSON.parse(history).length : 0;
      } catch (e) {
        historyCount = 0;
      }
      
      console.log(`ü¶ä ${flag}: ${nestor} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤, ${vadimus} –≤–∞–¥–∏–º—É—Å–æ–≤, ${historyCount} –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏`);
    });
  },
  switchUser: (newFlag) => {
    if (!newFlag) {
      console.log('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ñ–ª–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "Ksusha")');
      return;
    }
    console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${newFlag}`);
    console.log('‚ö†Ô∏è –î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑–º–µ–Ω–∏—Ç–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É USER_FLAG –≤ –∫–æ–¥–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    console.log(`–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: const USER_FLAG = '${newFlag}';`);
  },
  showFirebaseUsers: async () => {
    if (!db) {
      console.log('‚ùå Firebase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
      return;
    }
    
    try {
      console.log('üî• –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Firebase...');
      const snapshot = await db.collection('users').get();
      
      if (snapshot.empty) {
        console.log('üì≠ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Firebase');
        return;
      }
      
      console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ Firebase: ${snapshot.size}`);
      
      snapshot.forEach((doc) => {
        const data = doc.data();
        console.log(`ü¶ä ${data.userFlag || '–ù–ï–¢ –§–õ–ê–ì–ê'} (ID: ${doc.id}): ${data.nestor || 0} –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤, ${data.vadimus || 0} –≤–∞–¥–∏–º—É—Å–æ–≤, ${(data.history || []).length} –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏`);
      });
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase:', error);
    }
  },
  showCurrentUserFirebase: async () => {
    if (!db) {
      console.log('‚ùå Firebase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
      return;
    }
    
    try {
      console.log(`üîç –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${USER_FLAG} –≤ Firebase...`);
      const snapshot = await db.collection('users').where('userFlag', '==', USER_FLAG).get();
      
      if (snapshot.empty) {
        console.log(`üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${USER_FLAG} –≤ Firebase`);
        return;
      }
      
      console.log(`üì• –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è ${USER_FLAG}: ${snapshot.size}`);
      
      snapshot.forEach((doc) => {
        const data = doc.data();
        console.log(`üìä –î–∞–Ω–Ω—ã–µ ${USER_FLAG} –≤ Firebase:`, {
          documentId: doc.id,
          userFlag: data.userFlag,
          nestor: data.nestor,
          vadimus: data.vadimus,
          historyCount: (data.history || []).length,
          createdAt: data.createdAt,
          lastActive: data.lastActive
        });
      });
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase:', error);
    }
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
  console.log('ü¶ä –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤...');
  
  // –°–ù–ê–ß–ê–õ–ê –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
  loadFromLocalStorage();
  updateDisplay();
  loadHistory();
  console.log('üì± –î–∞–Ω–Ω—ã–µ –∏–∑ localStorage –∑–∞–≥—Ä—É–∂–µ–Ω—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–æ—Ç–æ–≤
  isLoading = false;
  updateSyncStatus('offline', 'üì± –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  
  setTimeout(() => {
    window.nestorDebug.testElements();
  }, 100);
  
  // –ü–û–¢–û–ú –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Firebase –≤ —Ñ–æ–Ω–µ
  if (typeof firebase !== 'undefined') {
    console.log('‚úÖ Firebase SDK –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
    setTimeout(() => {
      initializeFirebase();
    }, 500); // –î–∞–µ–º –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å—Å—è
  } else {
    console.error('‚ùå Firebase SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å localStorage');
    updateSyncStatus('offline', 'üì± –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ');
  }
});

console.log(`ü¶ä –°–∏—Å—Ç–µ–º–∞ –Ω–µ—Å—Ç–æ—Ä–∫–æ–∏–Ω–æ–≤ –¥–ª—è ${USER_FLAG} —Å Firebase v8 –≥–æ—Ç–æ–≤–∞! –ö–æ–º–∞–Ω–¥—ã –æ—Ç–ª–∞–¥–∫–∏: window.nestorDebug`); 
